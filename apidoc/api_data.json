[
  {
    "group": "Merchant_Dashbaord",
    "version": "0.0.1",
    "type": "get",
    "url": "/getCouponCountDist",
    "title": "api to fetch total merchant coupon distibuted.",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "merchantid",
            "description": "<p>merchant id  of the merchants. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n        \"error\": false,\n        \"status\": 200,\n        \"message\": \"data fetched for no of coupon\",\n        \"data\": 2\n        }",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{\n    \"error\": true,\n    \"status\": 404,\n    \"message\": \"error no coupon found for merchant as no active coupon exist\",\n    \"data\": null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/merchantapi.js",
    "groupTitle": "Merchant_Dashbaord",
    "name": "GetGetcouponcountdist"
  },
  {
    "group": "Merchant_Dashbaord",
    "version": "0.0.1",
    "type": "get",
    "url": "/getCouponCountUsed",
    "title": "api to fetch total merchant coupon used.",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "merchantid",
            "description": "<p>merchant id  of the merchants. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n     \"error\": false,\n     \"status\": 200,\n     \"message\": \"data fetched for no of coupon reedmed\",\n     \"data\": 2\n     }",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{\n    \"error\": true,\n    \"status\": 404,\n    \"message\": \"error no coupon found for merchant as no active coupon exist\",\n    \"data\": null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/merchantapi.js",
    "groupTitle": "Merchant_Dashbaord",
    "name": "GetGetcouponcountused"
  },
  {
    "group": "Merchant_Dashbaord",
    "version": "0.0.1",
    "type": "get",
    "url": "/merchantEarning",
    "title": "api to fetch merchant payment (Total sum).",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "merchantid",
            "description": "<p>merchantid of the of the merchant. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result. { &quot;error&quot;: false, &quot;status&quot;: 200, &quot;message&quot;: &quot;data fetched for merchant&quot;, &quot;data&quot;: { &quot;amount&quot;: 50000 } }</p>"
          }
        ]
      }
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{\n                     \"error\": true,\n                     \"status\": 404,\n                     \"message\": \"error blank data while updating payments\",\n                     \"data\": {\n                     \n                    }\n                      }",
          "type": "json"
        }
      ]
    },
    "filename": "routes/merchantapi.js",
    "groupTitle": "Merchant_Dashbaord",
    "name": "GetMerchantearning"
  },
  {
    "group": "Merchant_Dashbaord",
    "version": "0.0.1",
    "type": "get",
    "url": "/merchantShopNameChange",
    "title": "api change merchant shop name.",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "merchantid",
            "description": "<p>merchant id  of the merchants. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n    \"error\": false,\n    \"status\": 200,\n    \"message\": \"merchant shop name changed\",\n    \"data\": {\n        \"n\": 1,\n        \"nModified\": 1,\n        \"ok\": 1\n    }\n}",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{\n    \"error\": true,\n    \"status\": 500,\n    \"message\": \"merchantid not found in db\",\n    \"data\": null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/merchantapi.js",
    "groupTitle": "Merchant_Dashbaord",
    "name": "GetMerchantshopnamechange"
  },
  {
    "group": "Merchant_Dashbaord",
    "version": "0.0.1",
    "type": "get",
    "url": "/merchantTransaction",
    "title": "api to fetch merchant wise transaction which is sorted date wise",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "merchantid",
            "description": "<p>merchant id  of the merchants. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n            \"error\": false,\n            \"status\": 200,\n            \"message\": \"data fetched for merchant\",\n            \"data\": [\n            {\n            \"isPaid\": true,\n            \"entity\": \"order\",\n            \"amount_paid\": 102,\n            \"receipt\": \"order_FYe8cZu_MxQm\",\n            \"createdon\": \"23-05-2020\",\n            \"merchantname\": \"yfx\"\n            }\n             ]   \n            }",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{ \n \"error\": true,\n \"message\": \"error headers params are empty\",\n \"status\": 500,\n \"data\": null\n  }",
          "type": "json"
        }
      ]
    },
    "filename": "routes/merchantapi.js",
    "groupTitle": "Merchant_Dashbaord",
    "name": "GetMerchanttransaction"
  },
  {
    "group": "Merchant_Dashbaord",
    "version": "0.0.1",
    "type": "put",
    "url": "/imageuploadcheck",
    "title": "api to update boolean that if images is uploaded by merchants",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "mobilenumber",
            "description": "<p>Mobile number of the merchants. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "boolean",
            "optional": false,
            "field": "imageuploaded",
            "description": "<p>True if the images are successfully uploaded by merchant. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "array",
            "optional": false,
            "field": "imageurl",
            "description": "<p>download url of amazon s3. (body params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n     \"error\": false,\n     \"message\": \"resolved \",\n     \"status\": 200,\n     \"data\": {\n        \"n\": 1,\n        \"nModified\": 1,\n        \"ok\": 1\n    }\n        }",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{ \n \"error\": true,\n \"message\": \"error headers params are empty\",\n \"status\": 500,\n \"data\": null\n  }",
          "type": "json"
        }
      ]
    },
    "filename": "routes/merchantapi.js",
    "groupTitle": "Merchant_Dashbaord",
    "name": "PutImageuploadcheck"
  },
  {
    "group": "user_dashboard",
    "version": "0.0.1",
    "type": "get",
    "url": "/couponforCheckOut",
    "title": "api to fetch coupon as per user and merchant matching key",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userid",
            "description": "<p>userid of the user. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "merchantid",
            "description": "<p>merchantid of the merchant. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n                \"error\": false,\n                \"message\": 200,\n                \"status\": \"coupon for user fetched\",\n                \"data\": [\n               {\n                \"_id\": \"5ebd91c798fb0b295805a2b0\",\n                \"status\": \"Active\",\n                \"userid\": \"FmTD3G\",\n                \"couponcode\": \"NvEW3Z\",\n                \"category\": \"Cafe/Fast Food\",\n                \"merchantid\": \"h8SghQ\",\n                \"enddate\": \"22-05-2020\",\n                \"valid\": \"1\",\n                \"__v\": 0\n              },\n             {\n               \"_id\": \"5ebd91d998fb0b295805a2b2\",\n               \"status\": \"Active\",\n               \"userid\": \"FmTD3G\",\n               \"couponcode\": \"NvEW3Z\",\n               \"category\": \"Cafe/Fast Food\",\n               \"merchantid\": \"h8SghQ\",\n               \"enddate\": \"22-05-2020\",\n               \"valid\": \"1\",\n               \"__v\": 0\n              }\n                ]\n            }",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{ \n \"error\": true,\n \"message\": \"error blank data while fetching coupon for user\",\n \"status\": 404,\n \"data\": null\n  }",
          "type": "json"
        }
      ]
    },
    "filename": "routes/userManage.js",
    "groupTitle": "user_dashboard",
    "name": "GetCouponforcheckout"
  },
  {
    "group": "user_dashboard",
    "version": "0.0.1",
    "type": "get",
    "url": "/fetchCouponUser",
    "title": "api to fetch coupon for user",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userid",
            "description": "<p>userid of the user. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n            \"error\": false,\n            \"message\": 200,\n            \"status\": \"coupon for user fetched\",\n            \"data\": [\n        {\n            \"_id\": \"5ebc5b09fb22412e143b3f46\",\n            \"userid\": \"FmTD3G\",\n            \"couponcode\": \"WGgFqK\",\n            \"category\": \"Ice-Cream Parlour\",\n            \"enddate\": \"21-05-2020\",\n            \"valid\": \"1\",\n            \"__v\": 0\n        },\n        {\n            \"_id\": \"5ebc5b09fb22412e143b3f47\",\n            \"userid\": \"FmTD3G\",\n            \"couponcode\": \"NvEW3Z\",\n            \"category\": \"Cafe/Fast Food\",\n            \"enddate\": \"21-05-2020\",\n            \"valid\": \"1\",\n            \"__v\": 0\n        }\n            ]\n        }",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{ \n \"error\": true,\n \"message\": \"error blank data while fetching coupon for user\",\n \"status\": 404,\n \"data\": null\n  }",
          "type": "json"
        }
      ]
    },
    "filename": "routes/userManage.js",
    "groupTitle": "user_dashboard",
    "name": "GetFetchcouponuser"
  },
  {
    "group": "user_dashboard",
    "version": "0.0.1",
    "type": "get",
    "url": "/formaps",
    "title": "api to calculate distance between user and merchant",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userlatitude",
            "description": "<p>Current latitude of the user. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userlongitude",
            "description": "<p>Current longitude of the user. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "city",
            "description": "<p>City of the merchant. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n    \"error\": false,\n    \"message\": 200,\n    \"status\": \"user fetched\",\n    \"data\": [\n        {\n            \"_id\": \"5ead99102588643510ebba03\",\n            \"merchantid\": \"rKGFlO\",\n            \"fullname\": \"orion mall\",\n            \"mobilenumber\": \"9167162010\",\n            \"password\": \"$2b$10$z8IhiuCs3p3j87YMpLbcruOCj6lOWZEmPtaa0FwegIlm8E8SdKpGa\",\n            \"email\": \"chakladar.sandeep@gmail.com\",\n            \"city\": \"mumbai\",\n            \"zipcode\": \"410206\",\n            \"latitude\": \"18.993292\",\n            \"longitude\": \"73.115773\",\n            \"address\": \"yudeguye\",\n            \"category\": \"test\",\n            \"valid\": \"1\",\n            \"createdon\": \"2020-05-02T16:00:16.348Z\",\n            \"__v\": 0\n        }\n    ]\n}",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{ \n \"error\": true,\n \"message\": \"no merchant found near your location\",\n \"status\": 500,\n \"data\": null\n  }",
          "type": "json"
        }
      ]
    },
    "filename": "routes/userManage.js",
    "groupTitle": "user_dashboard",
    "name": "GetFormaps"
  },
  {
    "group": "user_dashboard",
    "version": "0.0.1",
    "type": "get",
    "url": "/transactionHistoryOfUser",
    "title": "api to get list of transactions done by user and output is sorted date wise i.e. latest transaction comes first.",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userid",
            "description": "<p>userid of the user. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n                      \"error\": false,\n                      \"status\": 200,\n                      \"message\": \"data fetched for user\",\n                      \"data\": [\n                      {\n                       \"isPaid\": false,\n                        \"userid\": \"azMY4k\",\n                       \"entity\": \"order\",\n                       \"amount_paid\": 0,\n                       \"receipt\": \"order_66Uaf48_A1jw\",\n                       \"createdon\": \"27-05-2020\",\n                       \"merchantname\": \"yfx\"\n                      },\n                     {\n                       \"isPaid\": true,\n                       \"userid\": \"azMY4k\",\n                       \"entity\": \"order\",\n                       \"amount_paid\": 0,\n                       \"receipt\": \"order_3aZvWpM_ODPt\",\n                       \"createdon\": \"24-05-2020\",\n                       \"merchantname\": \"yfx\"\n                     },\n                     {\n                      \"isPaid\": true,\n                      \"userid\": \"azMY4k\",\n                      \"entity\": \"order\",\n                      \"amount_paid\": 102,\n                      \"receipt\": \"order_FYe8cZu_MxQm\",\n                      \"createdon\": \"23-05-2020\",\n                      \"merchantname\": \"yfx\"\n                    }\n          \n                     ]\n                   }",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{\n \"error\": true,\n \"status\": 404,\n \"message\": \"error no payments found for user\",\n \"data\": null\n }",
          "type": "json"
        }
      ]
    },
    "filename": "routes/userManage.js",
    "groupTitle": "user_dashboard",
    "name": "GetTransactionhistoryofuser"
  },
  {
    "group": "user_dashboard",
    "version": "0.0.1",
    "type": "post",
    "url": "/coupontouser",
    "title": "api distribute merchant coupon to user after successfull transaction. Number of coupon is decided on amount transaction by user",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userlatitude",
            "description": "<p>Current latitude of the user. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userlongitude",
            "description": "<p>Current longitude of the user. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userid",
            "description": "<p>userid of the user. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n        \"error\": false,\n        \"status\": 200,\n        \"message\": \"coupon distributed to user successfully\",\n        \"data\": [\n            {\n                \n               \"_id\" : ObjectId(\"5ebc5d336da6bd244055c5f2\"),\n\t           \"userid\" : \"FmTD3G\",\n\t           \"couponcode\" : \"9PA1FS\",\n\t           \"category\" : \"Cafe/Fast Food\",\n\t           \"enddate\" : \"21-05-2020\",\n\t           \"valid\" : \"1\",\n\t           \"__v\" : 0\n            }\n        ]\n    }",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": "{ \n \"error\": true,\n \"message\": \"no merchant available with valid coupon\",\n \"status\": 500,\n \"data\": null\n  }",
          "type": "json"
        }
      ]
    },
    "filename": "routes/userManage.js",
    "groupTitle": "user_dashboard",
    "name": "PostCoupontouser"
  },
  {
    "group": "user_dashboard",
    "version": "0.0.1",
    "type": "post",
    "url": "/payments",
    "title": "api to store order of the user generated from razorpay",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "number",
            "optional": false,
            "field": "amount",
            "description": "<p>amount entered byuser. (body params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userid",
            "description": "<p>userid of the user. (body params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "merchantid",
            "description": "<p>merchantid of the merchant. (body params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n                   \"error\": false,\n                   \"status\": 200,\n                   \"message\": \"data saved for payments\",\n                   \"data\": {\n                   \"notes\": [],\n                   \"_id\": \"5ec58b1741eea03c2cc06ba5\",\n                   \"id\": \"order_Esja9JRvG0EymB\",\n                   \"entity\": \"order\",\n                   \"amount\": 50000,\n                   \"amount_paid\": 0,\n                   \"amount_due\": 50000,\n                   \"currency\": \"INR\",\n                   \"receipt\": \"order_HIxzP4G_s40O\",\n                   \"offer_id\": null,\n                   \"status\": \"created\",\n                   \"attempts\": 0,\n                   \"created_at\": 1590004503,\n                   \"createdon\": \"21-05-2020\",\n                   \"__v\": 0\n                  }\n                    }",
          "type": "object"
        }
      ]
    },
    "filename": "routes/userManage.js",
    "groupTitle": "user_dashboard",
    "name": "PostPayments"
  },
  {
    "group": "user_dashboard",
    "version": "0.0.1",
    "type": "put",
    "url": "/redeemCouponforUser",
    "title": "api to redeem coupon for user after successful payment",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "couponcode",
            "description": "<p>coupon code applied by user during transaction. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userid",
            "description": "<p>userid of the user. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "merchantid",
            "description": "<p>merchantid of the merchant. (header params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n                  \"error\": false,\n                  \"status\": 200,\n                  \"message\": \"coupon reedemed for user successfully\",\n                  \"data\": {\n                  \n                 }\n                   }",
          "type": "object"
        }
      ]
    },
    "filename": "routes/userManage.js",
    "groupTitle": "user_dashboard",
    "name": "PutRedeemcouponforuser"
  },
  {
    "group": "user_dashboard",
    "version": "0.0.1",
    "type": "put",
    "url": "/updatePassword",
    "title": "api to update the user password.",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userid",
            "description": "<p>userid of the user. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "password",
            "description": "<p>current password of the user. (body params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "newpass",
            "description": "<p>new password of the user. (body params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n                      \"error\": true,\n                      \"status\": 503,\n                      \"message\": \"password didn't match\",\n                      \"data\": null\n                    }",
          "type": "object"
        }
      ]
    },
    "error": {
      "examples": [
        {
          "title": "Error-Response:",
          "content": " {\n  \"error\": true,\n  \"status\": 503,\n  \"message\": \"password didn't match\",\n  \"data\": null\n}",
          "type": "json"
        }
      ]
    },
    "filename": "routes/userManage.js",
    "groupTitle": "user_dashboard",
    "name": "PutUpdatepassword"
  },
  {
    "group": "user_dashboard",
    "version": "0.0.1",
    "type": "put",
    "url": "/updatePassword",
    "title": "api to update the user password.",
    "parameter": {
      "fields": {
        "Parameter": [
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "userid",
            "description": "<p>userid of the user. (header params)(required)</p>"
          },
          {
            "group": "Parameter",
            "type": "string",
            "optional": false,
            "field": "categoryselected",
            "description": "<p>category selected by the user. (body params)(required)</p>"
          }
        ]
      }
    },
    "success": {
      "fields": {
        "Success 200": [
          {
            "group": "Success 200",
            "type": "object",
            "optional": false,
            "field": "API",
            "description": "<p>Response shows error status, message, http status code and result.</p>"
          }
        ]
      },
      "examples": [
        {
          "title": "Success-Response:",
          "content": "{\n                    \"error\": false,\n                    \"status\": 200,\n                    \"message\": \"password updated for user\",\n                    \"data\": {\n                    \n                   }\n                     }",
          "type": "object"
        }
      ]
    },
    "filename": "routes/userManage.js",
    "groupTitle": "user_dashboard",
    "name": "PutUpdatepassword"
  }
]
